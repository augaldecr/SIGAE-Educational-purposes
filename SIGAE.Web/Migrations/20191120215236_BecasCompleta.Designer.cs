// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIGAE.Web.Data;

namespace SIGAE.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191120215236_BecasCompleta")]
    partial class BecasCompleta
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.Asignatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("TipoAsignaturaId");

                    b.Property<int>("TipoEvaluacionId");

                    b.HasKey("Id");

                    b.HasIndex("TipoAsignaturaId");

                    b.HasIndex("TipoEvaluacionId");

                    b.ToTable("Asignaturas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Asignatura");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModalidadId");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ModalidadId");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.Modalidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Modalidades");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.Publicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<DateTime>("FechaCreacion");

                    b.Property<int>("PublicadorId");

                    b.Property<int>("TemaId");

                    b.Property<string>("Titulo")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("PublicadorId");

                    b.HasIndex("TemaId");

                    b.ToTable("Publicaciones");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Publicacion");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.Tema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AsignaturaId");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AsignaturaId");

                    b.ToTable("Temas");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.TipoAsignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposAsignacion");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.TipoAsignatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposAsignatura");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.TipoEvaluacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposEvaluacion");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Asesoria.Gasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Asignado");

                    b.Property<string>("Factura");

                    b.Property<int?>("GiraId");

                    b.Property<int>("Monto");

                    b.Property<int?>("TipoGastoId");

                    b.Property<string>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("GiraId");

                    b.HasIndex("TipoGastoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Asesoria.Gira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dependencia")
                        .IsRequired();

                    b.Property<DateTime>("Fecha");

                    b.Property<DateTime>("FechaRegreso");

                    b.Property<DateTime>("FechaSalida");

                    b.Property<int?>("LiquidacionId");

                    b.Property<int>("LocalidadVisitadaId");

                    b.Property<int>("MontoARESEP");

                    b.Property<string>("Motivo")
                        .IsRequired();

                    b.Property<string>("Ruta")
                        .IsRequired();

                    b.Property<int>("TipoTransporteId");

                    b.Property<string>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("LiquidacionId");

                    b.HasIndex("LocalidadVisitadaId");

                    b.HasIndex("TipoTransporteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Giras");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Asesoria.Liquidacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aceptado");

                    b.Property<DateTime>("FechaAprobacion");

                    b.Property<DateTime>("FechaSolicitud");

                    b.Property<string>("NumBoletaLiquidacion")
                        .IsRequired();

                    b.Property<string>("NumBoletaTransporte")
                        .IsRequired();

                    b.Property<string>("Observaciones");

                    b.Property<string>("UsuarioId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Liquidaciones");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Asesoria.TipoGasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposGasto");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Asesoria.TipoTransporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposTransporte");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Canton", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("ProvinciaId");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Cantones");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Circuito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("RegionalId");

                    b.HasKey("Id");

                    b.HasIndex("RegionalId");

                    b.ToTable("Circuitos");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.CursoLectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Actual");

                    b.Property<string>("Anio")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CursosLectivos");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Distrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantonId");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CantonId");

                    b.ToTable("Distritos");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GiraId");

                    b.Property<int>("PersonaId");

                    b.HasKey("Id");

                    b.HasIndex("GiraId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AsignacionId");

                    b.Property<int>("CursoLectivoId");

                    b.Property<int>("InstitucionId");

                    b.Property<int>("NivelId");

                    b.Property<string>("Seccion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AsignacionId");

                    b.HasIndex("CursoLectivoId");

                    b.HasIndex("InstitucionId");

                    b.HasIndex("NivelId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Institucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CircuitoId");

                    b.Property<string>("CodigoPresupuestario")
                        .IsRequired();

                    b.Property<string>("Direccion")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Lema");

                    b.Property<int>("LocalidadId");

                    b.Property<string>("LogoURL");

                    b.Property<string>("Mision");

                    b.Property<int>("ModalidadId");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("Telefono")
                        .IsRequired();

                    b.Property<int>("TipoInstitucionId");

                    b.Property<string>("Vision");

                    b.HasKey("Id");

                    b.HasIndex("CircuitoId");

                    b.HasIndex("LocalidadId");

                    b.HasIndex("ModalidadId");

                    b.HasIndex("TipoInstitucionId");

                    b.ToTable("Instituciones");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Localidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistritoId");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DistritoId");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Matricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Carnet")
                        .IsRequired();

                    b.Property<int>("CursoLectivoId");

                    b.Property<int>("EstudianteId");

                    b.Property<int?>("GrupoId");

                    b.HasKey("Id");

                    b.HasIndex("CursoLectivoId");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("GrupoId");

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.ModalidadInstitucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ModalidadesInstitucion");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Nivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Niveles");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Nombramiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaRige");

                    b.Property<DateTime>("FechaVence");

                    b.Property<int>("FuncionarioId");

                    b.Property<int>("InstitucionId");

                    b.Property<int>("PuestoId");

                    b.Property<int>("TipoNombramientoId");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("InstitucionId");

                    b.HasIndex("PuestoId");

                    b.HasIndex("TipoNombramientoId");

                    b.ToTable("Nombramientos");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("PaisId");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Puesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("TipoPuestoId");

                    b.HasKey("Id");

                    b.HasIndex("TipoPuestoId");

                    b.ToTable("Puestos");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Regional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Regionales");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.RutaTransporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("RutaTransporte");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.TipoInstitucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposInstitucion");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.TipoLocalizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposLocalizacion");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.TipoNombramiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposNombramiento");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.TipoPuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposPuesto");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Becas.Beca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int?>("TipoBecaId");

                    b.HasKey("Id");

                    b.HasIndex("TipoBecaId");

                    b.ToTable("Beca");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Beca");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Becas.Familiar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParentescoId");

                    b.HasKey("Id");

                    b.HasIndex("ParentescoId");

                    b.ToTable("Familiar");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Becas.Parentesco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Parentesco");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Becas.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aprobada");

                    b.Property<int>("BecaSolicitadaId");

                    b.Property<bool>("CentEducCercania");

                    b.Property<int?>("CentroEducativoCercanoId");

                    b.Property<string>("Direccion")
                        .IsRequired();

                    b.Property<string>("DistanciaAMasCercano");

                    b.Property<string>("DistanciaAMatriculado");

                    b.Property<string>("DistanciaAlCentroEducativo")
                        .IsRequired();

                    b.Property<int>("EncargadoId");

                    b.Property<DateTime>("Fecha");

                    b.Property<int>("NumSubsidioTransporteId");

                    b.Property<string>("Observaciones");

                    b.Property<int>("PobladoId");

                    b.Property<string>("RazonDeNoMatricula");

                    b.Property<int>("RutaId");

                    b.Property<int>("SolicitanteId");

                    b.Property<bool>("TrnspPblcHorarioCentEduc");

                    b.HasKey("Id");

                    b.HasIndex("BecaSolicitadaId");

                    b.HasIndex("CentroEducativoCercanoId");

                    b.HasIndex("EncargadoId");

                    b.HasIndex("NumSubsidioTransporteId");

                    b.HasIndex("PobladoId");

                    b.HasIndex("RutaId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("Solicitud");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Becas.Subsidio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Subsidio");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Becas.TipoBeca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TipoBeca");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Identificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaExpedicion");

                    b.Property<DateTime>("FechaVencimiento");

                    b.Property<string>("NumIdentificacion")
                        .IsRequired();

                    b.Property<int>("TipoIdentificacionId");

                    b.HasKey("Id");

                    b.HasIndex("TipoIdentificacionId");

                    b.ToTable("Identificaciones");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Misc.Archivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AsignacionId");

                    b.Property<string>("Descripcion");

                    b.Property<int?>("MaterialId");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int?>("NotificacionId");

                    b.Property<string>("URL");

                    b.HasKey("Id");

                    b.HasIndex("AsignacionId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("NotificacionId");

                    b.ToTable("Archivos");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Misc.Dialecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Dialecto");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Misc.DialectoHablado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DialectoId");

                    b.Property<int?>("EstudianteId");

                    b.Property<int?>("SolicitudId");

                    b.HasKey("Id");

                    b.HasIndex("DialectoId");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("SolicitudId");

                    b.ToTable("DialectoHablado");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Misc.Etnia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Etnia");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Misc.MedioTransporteSolicitado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Costo");

                    b.Property<int?>("SolicitudId");

                    b.Property<int>("TipoMedioTransporteId");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudId");

                    b.HasIndex("TipoMedioTransporteId");

                    b.ToTable("MedioTransporteSolicitado");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Misc.Notificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Medio");

                    b.Property<string>("Mensaje");

                    b.Property<int?>("PersonaId");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Misc.TipoMedioTransporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TipoMedioTransporte");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido1")
                        .IsRequired();

                    b.Property<string>("Apellido2")
                        .IsRequired();

                    b.Property<string>("Celular");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<int>("GeneroId");

                    b.Property<int>("IdentificacionId");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.HasIndex("IdentificacionId");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.TipoIdentificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposIdentificacion");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<int?>("PersonaId");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PersonaId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.SubArea", b =>
                {
                    b.HasBaseType("SIGAE.Web.Data.Entities.Academico.Asignatura");

                    b.Property<int>("EspecialidadId");

                    b.HasIndex("EspecialidadId");

                    b.HasDiscriminator().HasValue("SubArea");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.Asignacion", b =>
                {
                    b.HasBaseType("SIGAE.Web.Data.Entities.Academico.Publicacion");

                    b.Property<float>("Calificacion");

                    b.Property<DateTime>("FechaDisponibilidad");

                    b.Property<DateTime>("FechaEntrega");

                    b.Property<int?>("PuntajeObtenido")
                        .IsRequired();

                    b.Property<int>("Puntos");

                    b.Property<int>("TipoAsignacionId");

                    b.HasIndex("TipoAsignacionId");

                    b.HasDiscriminator().HasValue("Asignacion");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.Material", b =>
                {
                    b.HasBaseType("SIGAE.Web.Data.Entities.Academico.Publicacion");

                    b.HasDiscriminator().HasValue("Material");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Becas.BecaRemunerada", b =>
                {
                    b.HasBaseType("SIGAE.Web.Data.Entities.Becas.Beca");

                    b.Property<decimal>("Monto");

                    b.HasDiscriminator().HasValue("BecaRemunerada");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Estudiante", b =>
                {
                    b.HasBaseType("SIGAE.Web.Data.Entities.Persona");

                    b.Property<int?>("EtniaIndigenaId");

                    b.HasIndex("EtniaIndigenaId");

                    b.HasDiscriminator().HasValue("Estudiante");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.Asignatura", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Academico.TipoAsignatura", "TipoAsignatura")
                        .WithMany()
                        .HasForeignKey("TipoAsignaturaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Academico.TipoEvaluacion", "TipoEvaluacion")
                        .WithMany()
                        .HasForeignKey("TipoEvaluacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.Especialidad", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Academico.Modalidad", "Modalidad")
                        .WithMany()
                        .HasForeignKey("ModalidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.Publicacion", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Funcionario", "Publicador")
                        .WithMany()
                        .HasForeignKey("PublicadorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Academico.Tema", "Tema")
                        .WithMany()
                        .HasForeignKey("TemaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.Tema", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Academico.Asignatura", "Asignatura")
                        .WithMany()
                        .HasForeignKey("AsignaturaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Asesoria.Gasto", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Asesoria.Gira")
                        .WithMany("Gastos")
                        .HasForeignKey("GiraId");

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Asesoria.TipoGasto", "TipoGasto")
                        .WithMany("Gastos")
                        .HasForeignKey("TipoGastoId");

                    b.HasOne("SIGAE.Web.Data.Entities.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Asesoria.Gira", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Asesoria.Liquidacion")
                        .WithMany("Giras")
                        .HasForeignKey("LiquidacionId");

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Localidad", "LocalidadVisitada")
                        .WithMany()
                        .HasForeignKey("LocalidadVisitadaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Asesoria.TipoTransporte", "TipoTransporte")
                        .WithMany("Giras")
                        .HasForeignKey("TipoTransporteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Asesoria.Liquidacion", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Canton", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Provincia", "Provincia")
                        .WithMany("Cantones")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Circuito", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Regional", "Regional")
                        .WithMany("Circuitos")
                        .HasForeignKey("RegionalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Distrito", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Canton", "Canton")
                        .WithMany("Distritos")
                        .HasForeignKey("CantonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Funcionario", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Asesoria.Gira")
                        .WithMany("Acompanhantes")
                        .HasForeignKey("GiraId");

                    b.HasOne("SIGAE.Web.Data.Entities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Grupo", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Academico.Asignacion")
                        .WithMany("Grupos")
                        .HasForeignKey("AsignacionId");

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.CursoLectivo", "CursoLectivo")
                        .WithMany("Grupos")
                        .HasForeignKey("CursoLectivoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Institucion", "Institucion")
                        .WithMany("Grupos")
                        .HasForeignKey("InstitucionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Nivel", "Nivel")
                        .WithMany()
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Institucion", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Circuito", "Circuito")
                        .WithMany("Instituciones")
                        .HasForeignKey("CircuitoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Localidad", "Localidad")
                        .WithMany("Instituciones")
                        .HasForeignKey("LocalidadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.ModalidadInstitucion", "Modalidad")
                        .WithMany()
                        .HasForeignKey("ModalidadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.TipoInstitucion", "TipoInstitucion")
                        .WithMany()
                        .HasForeignKey("TipoInstitucionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Localidad", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Distrito", "Distrito")
                        .WithMany("Localidades")
                        .HasForeignKey("DistritoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Matricula", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.CursoLectivo", "CursoLectivo")
                        .WithMany()
                        .HasForeignKey("CursoLectivoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Grupo", "Grupo")
                        .WithMany("Estudiantes")
                        .HasForeignKey("GrupoId");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Nombramiento", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Institucion", "Institucion")
                        .WithMany()
                        .HasForeignKey("InstitucionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Puesto", "Puesto")
                        .WithMany()
                        .HasForeignKey("PuestoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.TipoNombramiento", "TipoNombramiento")
                        .WithMany()
                        .HasForeignKey("TipoNombramientoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Provincia", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Pais", "Pais")
                        .WithMany("Provincias")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Administrativo.Puesto", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.TipoPuesto", "TipoPuesto")
                        .WithMany()
                        .HasForeignKey("TipoPuestoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Becas.Beca", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Becas.TipoBeca", "TipoBeca")
                        .WithMany()
                        .HasForeignKey("TipoBecaId");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Becas.Familiar", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Becas.Parentesco", "Parentesco")
                        .WithMany()
                        .HasForeignKey("ParentescoId");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Becas.Solicitud", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Becas.Beca", "BecaSolicitada")
                        .WithMany()
                        .HasForeignKey("BecaSolicitadaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Institucion", "CentroEducativoCercano")
                        .WithMany()
                        .HasForeignKey("CentroEducativoCercanoId");

                    b.HasOne("SIGAE.Web.Data.Entities.Persona", "Encargado")
                        .WithMany()
                        .HasForeignKey("EncargadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Becas.Subsidio", "NumSubsidioTransporte")
                        .WithMany()
                        .HasForeignKey("NumSubsidioTransporteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Localidad", "Poblado")
                        .WithMany()
                        .HasForeignKey("PobladoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.RutaTransporte", "Ruta")
                        .WithMany()
                        .HasForeignKey("RutaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Administrativo.Matricula", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Identificacion", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.TipoIdentificacion", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Misc.Archivo", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Academico.Asignacion")
                        .WithMany("Archivos")
                        .HasForeignKey("AsignacionId");

                    b.HasOne("SIGAE.Web.Data.Entities.Academico.Material")
                        .WithMany("Archivos")
                        .HasForeignKey("MaterialId");

                    b.HasOne("SIGAE.Web.Data.Entities.Misc.Notificacion")
                        .WithMany("Adjuntos")
                        .HasForeignKey("NotificacionId");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Misc.DialectoHablado", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Misc.Dialecto", "Dialecto")
                        .WithMany()
                        .HasForeignKey("DialectoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("EstudianteId");

                    b.HasOne("SIGAE.Web.Data.Entities.Becas.Solicitud")
                        .WithMany("DialectoHablados")
                        .HasForeignKey("SolicitudId");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Misc.MedioTransporteSolicitado", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Becas.Solicitud", "Solicitud")
                        .WithMany("MediosSolicitados")
                        .HasForeignKey("SolicitudId");

                    b.HasOne("SIGAE.Web.Data.Entities.Misc.TipoMedioTransporte", "TipoMedioTransporte")
                        .WithMany()
                        .HasForeignKey("TipoMedioTransporteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Misc.Notificacion", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Persona", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIGAE.Web.Data.Entities.Identificacion", "Identificacion")
                        .WithMany()
                        .HasForeignKey("IdentificacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.User", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.SubArea", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Academico.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Academico.Asignacion", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Academico.TipoAsignacion", "TipoAsignacion")
                        .WithMany()
                        .HasForeignKey("TipoAsignacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIGAE.Web.Data.Entities.Estudiante", b =>
                {
                    b.HasOne("SIGAE.Web.Data.Entities.Misc.Etnia", "EtniaIndigena")
                        .WithMany()
                        .HasForeignKey("EtniaIndigenaId");
                });
#pragma warning restore 612, 618
        }
    }
}
